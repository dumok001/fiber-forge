name: Auto Release

on:
  push:
    branches: [ main ]
    paths:
      - 'package.json'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      new-version: ${{ steps.check.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
          
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version not changed"
          fi

  create-release:
    needs: check-version
    if: needs.check-version.outputs.version-changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build project
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ needs.check-version.outputs.new-version }}"
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          
          echo "## 🚀 Release v$VERSION" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### 📦 Installation" >> CHANGELOG.md
          echo "\`\`\`bash" >> CHANGELOG.md
          echo "npm install $PACKAGE_NAME@$VERSION" >> CHANGELOG.md
          echo "\`\`\`" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### 🔗 Links" >> CHANGELOG.md
          echo "- [📦 View on npm](https://www.npmjs.com/package/$PACKAGE_NAME)" >> CHANGELOG.md
          echo "- [📖 Documentation](https://github.com/${{ github.repository }}#readme)" >> CHANGELOG.md
          echo "- [🐛 Issues](https://github.com/${{ github.repository }}/issues)" >> CHANGELOG.md
          echo "- [💬 Discussions](https://github.com/${{ github.repository }}/discussions)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### ✨ What's Changed" >> CHANGELOG.md
          git log --oneline --pretty=format:"- %s" $(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")..HEAD >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "---" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD~10")...v$VERSION" >> CHANGELOG.md

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.check-version.outputs.new-version }}
          release_name: "🎉 Release v${{ needs.check-version.outputs.new-version }}"
          body_path: CHANGELOG.md
          draft: false
          prerelease: false
